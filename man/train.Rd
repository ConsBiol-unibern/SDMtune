% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/train.R
\name{train}
\alias{train}
\title{Train}
\usage{
train(method, data, folds = NULL, verbose = TRUE, p = NULL,
  a = NULL, rep = NULL, seed = NULL, ...)
}
\arguments{
\item{method}{character. Method used to train the model, possible values are
"Maxent", "Maxnet" or "RF".}

\item{data}{\code{\linkS4class{SWD}} object with presence and
absence/background locations.}

\item{folds}{list with two matrices, the first for the training and the
second for the testing dataset. Each column of one matrix represents a fold
with \code{TRUE} for the locations included in and \code{FALSE} excluded from
the partition.}

\item{verbose}{logical, if \code{TRUE} shows a progress bar during cross
validation, default is \code{TRUE}.}

\item{p}{Deprecated.}

\item{a}{Deprecated.}

\item{rep}{Deprecated.}

\item{seed}{Deprecated.}

\item{...}{Arguments passed to the relative method, see details.}
}
\value{
An \code{\linkS4class{SDMmodel}} or \code{\linkS4class{SDMmodelCV}}
object.
}
\description{
Train a model using one of the following methods: BRT, Maxent, Maxnet or
Random Forest.
}
\details{
\itemize{
\item For the Maxent method, possible arguments are:
\itemize{
\item reg: numeric. The value of the regularization multiplier, default is 1.
\item fc: vector. The value of the feature classes, possible values are
combinations of "l", "q", "p", "h" and "t", default is "lqph".
\item iter: numeric. Number of iterations used by the MaxEnt algorithm,
default is 500.
\item extra_args: vector. Extra arguments used to run MaxEnt, default is
"removeduplicates=false" and "addsamplestobackground=false". In case
this is not your expected behavior you can assign extra_args = "" or
you can change or add any other additional arguments extending the
default settings (e.g. \code{extra_args = c("removeduplicates=true,
      addsamplestobackground=true)"**})
}
\item For the Maxnet method, possible arguments are (for more details see
\code{\link[maxnet]{maxnet}}):
\itemize{
\item reg: numeric. The value of the regularization intensity, default is 1.
\item fc: vector. The value of the feature classes, possible values are
combinations of "l", "q", "p", "h" and "t", default is "lqph".
}
\item For the RF method the model is trained as classification. Possible
arguments are (for more details see
\code{\link[randomForest]{randomForest}}):
\itemize{
\item mtry: numeric. Number of variable randomly sampled at each split,
default is \code{floor(sqrt(number of variables))}.
\item ntree: numeric. Number of tree to grow, default is 500.
}
\item For the BRT method possible arguments are (for more details see
\code{\link[gbm]{gbm}}):
\itemize{
\item distribution: character. Name of the distribution to use, default is
"bernoulli".
\item ntree: integer. Maximum number of tree to grow, default is 100.
\item interaction.depth: integer. Maximum depth of each tree, default is 1.
\item lr: numeric. The shrinkage parameter, default is 0.1.
\item bag.fraction: numeric. Random fraction of data used in the tree
expansion, default is 0.5.
}
}
}
\examples{
\donttest{
# Acquire environmental variables
files <- list.files(path = file.path(system.file(package = "dismo"), "ex"),
                    pattern = "grd", full.names = TRUE)
predictors <- raster::stack(files)

# Prepare presence and background locations
p_coords <- virtualSp$presence
bg_coords <- virtualSp$background

# Create SWD object
data <- prepareSWD(species = "Virtual species", p = p_coords, a = bg_coords,
                   env = predictors, categorical = "biome")

# Train a Maxent model
model <- train(method = "Maxent", data = data, fc = "l", reg = 1.5,
               iter = 700)

# Train a Maxnet model
model <- train(method = "Maxnet", data = data, fc = "lq", reg = 1.5)

# Train a Maxnet model with cross validation
# Create 4 random folds splitting only the presence data
folds <- randomFolds(data, k = 4, only_presence = TRUE)
model <- train(method = "Maxnet", data = data, fc = "l", reg = 0.8,
               folds = folds)

# Train presence absence models
# Prepare presence and absence locations
p_coords <- virtualSp$presence
a_coords <- virtualSp$absence#'
# Create SWD object
data <- prepareSWD(species = "Virtual species", p = p_coords, a = a_coords,
                   env = predictors[[1:8]])

# Train a Random Forest model
model <- train("RF", data = data, ntree = 300)

# Train a Boosted Regression Tree model
model <- train("BRT", data = data, ntree = 300, lr = 0.001)
}
}
\references{
Hijmans, Robert J., Steven Phillips, John Leathwick, and Jane
Elith. 2017. dismo: Species Distribution Modeling.
\url{https://cran.r-project.org/package=dismo}.

Steven Phillips (2017). maxnet: Fitting 'Maxent' Species Distribution Models
with 'glmnet'. \url{https://CRAN.R-project.org/package=maxnet}.

A. Liaw and M. Wiener (2002). Classification and Regression by randomForest.
R News 2(3), 18--22.

Brandon Greenwell, Bradley Boehmke, Jay Cunningham and GBM Developers (2019).
gbm: Generalized Boosted Regression Models.
\url{https://CRAN.R-project.org/package=gbm}
}
\seealso{
\code{\link{randomFolds}}
}
\author{
Sergio Vignali
}
