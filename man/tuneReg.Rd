% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tuneReg.R
\name{tuneReg}
\alias{tuneReg}
\title{Tune Regularization}
\usage{
tuneReg(model, regs, metric = c("auc", "tss", "aicc"), test = NULL,
  env = NULL, parallel = FALSE)
}
\arguments{
\item{model}{SDMmodel object.}

\item{regs}{vector. A sequence of regularization multipliers to test.}

\item{metric}{character. The metric used to evaluate the models, possible
values are: "auc", "tss" and "aicc", default is "auc".}

\item{test}{SWD. Test dataset used to evaluate the model, not used with aicc,
default is NULL. Used only with AICc.}

\item{env}{\link{stack} or \link{brick} containing the environmental
variables, used only with "aicc", default is NULL.}

\item{parallel}{logical, if TRUE it uses parallel computation, deafult is
FALSE.}
}
\value{
A \link{SDMtune} object.
}
\description{
Given a sequence of regularization multipliers, the function runs several
models increasing the regularization multiplier.
}
\details{
You need package \pkg{snow} to use parallel computation and
\pkg{rgdal} to save the prediction in a raster file. Parallel computation
increases the speed only for big datasets due to the time necessary to create
the cluster. The minimum value of reg allow is for Maxent models is 0.001, if
lower MaxEnt crasches; for Maxnet model is 0.1, if lower doesn't converg.
}
\examples{
\dontrun{
reg_test <- tuneREG(model, metric = "aicc", env = predictors, parallel = T)}

}
\seealso{
Other tuning functions: \code{\link{tuneBg}},
  \code{\link{tuneFC}}
}
\author{
Sergio Vignali
}
