% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tuneFC.R
\name{tuneFC}
\alias{tuneFC}
\title{Tune Feature Combination}
\usage{
tuneFC(model, fcs = c("l", "lq", "lqp", "lqh", "lqhp"), metric = c("auc",
  "tss", "aicc"), extra_args = NULL, env = NULL, parallel = FALSE)
}
\arguments{
\item{model}{Maxent object.}

\item{fcs}{vector. A list of Feature Classes combination to be tested,
default is "l", "lq", 'lqp', "lqh" and "lqph".}

\item{metric}{character. The metric used to evaluate the models, possible values are:
"auc", "tss" and "aicc", default is "auc"}

\item{extra_args}{vector. Extra arguments used to run MaxEnt.}

\item{env}{\link{stack} or \link{brick} containing the environmental variables,
used only with "aicc", default is NULL.}

\item{parallel}{logical, if TRUE it uses parallel computation, deafult is FALSE.}
}
\value{
A MMSelection object.
}
\description{
The function iterates among different Feature Classes combinations and for each of them
performs a run a MaxEnt model using the given regularization multiplier.
}
\details{
You need package \link{snow} to use parallel computation and \link{rgdal}
to save the prediction in a raster file. Parallel computation increases the speed
only for big datasets due to the time necessary to create the cluster.
}
\examples{
\dontrun{
mms <- tuneFC(model)}

}
\author{
Sergio Vignali
}
